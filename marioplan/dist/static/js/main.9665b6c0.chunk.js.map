{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInLinks.jsx","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/project/ProjectSummary.jsx","components/project/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/project/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/project/CreateProject.jsx","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.jsx","store/reducer/projectReducer.jsx","store/reducer/rootReducer.jsx","config/fbconfig.js","index.js"],"names":["signIn","credentials","dispatch","getstate","console","log","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","connect","state","signOut","getState","props","className","to","onClick","initial","SignedOutLinks","ownProps","initials","profile","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","match","params","data","firstName","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","authError","onSubmit","htmlFor","onChange","creds","SignUp","lastName","signUp","newUser","getFirebase","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","authorLastName","Date","error","App","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","reduxFirestore","authIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9665b6c0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getstate) => {\r\n    console.log(credentials);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getstate, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((response) => {\r\n        console.log(response);\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(response.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\nexport default signIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Logout</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.initial}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signin\">Sign In</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nconst Navbar = (props) => {\r\n  const { auth } = props;\r\n  console.log(auth);\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {auth.uid ? (\r\n          <SignedInLinks initial={props.initials}></SignedInLinks>\r\n        ) : (\r\n          <SignedOutLinks></SignedOutLinks>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  return {\r\n    initials: state.firebase.profile.initials,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user}</span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Links, Route } from \"react-router-dom\";\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>{project.content}</p>\r\n        Posted by<p>{project.authorFirstName}</p>\r\n        <p className=\"grey-text\">\r\n          Date: {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nconst ProjectList = (props) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {props.projects &&\r\n        props.projects.map((project) => {\r\n          return (\r\n            <Link key={project.id} to={\"/projects/\" + project.id}>\r\n              <ProjectSummary project={project}></ProjectSummary>\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../project/ProjectList\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\r\n    else {\r\n      return (\r\n        <div>\r\n          <div className=\"container dashboard\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 m6\">\r\n                <ProjectList projects={projects}></ProjectList>\r\n              </div>\r\n              <div className=\"col s12 m5 offset-m1\">\r\n                <Notifications\r\n                  notifications={this.props.notifications}\r\n                ></Notifications>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n    },\r\n    {\r\n      collection: \"notifications\",\r\n      limit: 3,\r\n      orderBy: [\"time\", \"desc\"],\r\n    },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nconst ProjectDetails = (props) => {\r\n  const { project } = props;\r\n  console.log(props);\r\n  let id = props.match.params.id;\r\n  if (!props.auth.uid) {\r\n    return <Redirect to=\"/signin\"></Redirect>;\r\n  } else {\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>{props.project.firstName}</div>\r\n              <div>20 November 2020</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div> Loading</div>;\r\n    }\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n    },\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport signIn from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n    console.log(e);\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\"></Redirect>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstname\">FirstName</label>\r\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastname\">Lastname</label>\r\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n    console.log(e);\r\n  };\r\n  handleSubmit = (e) => {\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    if (!this.props.auth.uid) {\r\n      return <Redirect to=\"/signin\"></Redirect>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"title\">Tite</label>\r\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"content\">Content</label>\r\n              <textarea\r\n                className=\"materialize-textarea\"\r\n                id=\"content\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const authorId = getState().firebase.auth.uid;\r\n    const profile = getState().firebase.profile;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        createdAt: new Date(),\r\n        authorId,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project: project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", error: err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/project/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/project/CreateProject\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard}></Route>\n            <Route path=\"/projects/:id\" component={ProjectDetails}></Route>\n            <Route path=\"/signin\" component={SignIn}></Route>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/create\" component={CreateProject}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login fail\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login successful\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"SignOut success\");\r\n      return {\r\n        state,\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"SignUp success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"SignUP error\");\r\n      return { ...state, authError: action.err.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.error);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDLyzSv5DUWUNHz1a78lkOfl6tWYf0hdXo\",\r\n  authDomain: \"marioplan-56b06.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-56b06.firebaseio.com\",\r\n  projectId: \"marioplan-56b06\",\r\n  storageBucket: \"marioplan-56b06.appspot.com\",\r\n  messagingSenderId: \"748592076660\",\r\n  appId: \"1:748592076660:web:328a1a2bdf188082dffe21\",\r\n  measurementId: \"G-RW3HF3EPHR\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { authIsReady } from \"react-redux-firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducer/rootReducer\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbconfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n    }), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\nauthIsReady(store, \"firebase\").then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}